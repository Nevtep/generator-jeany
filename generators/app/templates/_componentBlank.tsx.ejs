import React from 'react';
<%if(addQuery || addMutation){%>
import {<%= addQuery ? ' useQuery,' : '' %><%= addMutation ? ' useMutation' : '' %>  } from '@apollo/react-hooks';
<% if(addQuery) {%>import { <%= queryName %> } from '../queries';
import { <%= queryName.split('_').map(part => part.substr(0,1) + part.substr(1).toLowerCase()).join('') %> } from '../queries/__generated__/<%= queryName.split('_').map(part => part.substr(0,1) + part.substr(1).toLowerCase()).join('') %>';<%}%>
<% if(addMutation) {%>import { <%= mutationName %> } from '../mutations';
import { <%= mutationName.split('_').map(part => part.substr(0,1) + part.substr(1).toLowerCase()).join('') %> } from '../mutations/__generated__/<%= mutationName.split('_').map(part => part.substr(0,1) + part.substr(1).toLowerCase()).join('') %>';<%}%>
<%}%>
export interface <%= componentName %>Props {
}

const <%= componentName %>: React.FC<<%= componentName %>Props> = () => {
    <%if(addQuery){%>const { loading, error, data } = useQuery<<%= queryName.split('_').map(part => part.substr(0,1) + part.substr(1).toLowerCase()).join('') %>>(<%= queryName %>);<%}%>
    <%if(addMutation){%>const [mutate<%= mutationName.split('_').map(part => part.substr(0,1) + part.substr(1).toLowerCase()).join('') %>, { loading, error, data }] = useMutation<<%= mutationName.split('_').map(part => part.substr(0,1) + part.substr(1).toLowerCase()).join('') %>>(<%= mutationName %>);<%}%>
    return (<React.Fragment>
      
    </React.Fragment>);
}

export default <%= componentName %>;